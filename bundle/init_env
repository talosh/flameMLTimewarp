#!/usr/bin/python

# cmd_mac = """/bin/bash --rcfile <(echo '. ~/.bashrc; eval "$(../miniconda3/bin/conda shell.bash hook)"; conda activate')"""
# rc_linux = """konsole -e /bin/bash --rcfile <(echo '. ~/.bashrc; eval "$(../miniconda3/bin/conda shell.bash hook)"; conda activate')"""

import os
import sys

env_folder = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
env_folder = os.path.join(env_folder, 'miniconda3')

if len (sys.argv) > 1:
    env_folder = sys.argv[1]

bash_rc_file = os.path.join(os.path.expanduser('~'), '.bashrc')
tmp_bash_rc_file = os.path.join(os.path.expanduser('~'), '.tmp_bashrc')

if os.path.isfile(tmp_bash_rc_file):
    os.remove(tmp_bash_rc_file)
    
rc = ''
if os.path.isfile(bash_rc_file):
    with open(bash_rc_file, 'r') as rcfile:
        rc = rcfile.read()
        rcfile.close()
rc += """\neval "$(""" + os.path.join(env_folder, 'bin', 'conda') + """ shell.bash hook)"; conda activate\n"""

with open(tmp_bash_rc_file, 'w') as tmp_rcfile:
    tmp_rcfile.write(rc)
    tmp_rcfile.close()

if sys.platform == 'darwin':
    if any ([os.getenv('SSH_TTY'), os.getenv('SSH_CONNECTION'), os.getenv('SSH_CLIENT')]):
        cmd_prefix = '/bin/bash --rcfile ' + tmp_bash_rc_file
        os.system(cmd_prefix)
    else:
        cmd_prefix = """tell application "Terminal" to activate do script "clear; """
        cmd_prefix += """/bin/bash --rcfile """ + tmp_bash_rc_file + '"'
        import subprocess
        subprocess.Popen(['osascript', '-e', cmd_prefix])
else:
    cmd_prefix = 'gnome-terminal --title=flameTimewarpML -- /bin/bash --rcfile ' + tmp_bash_rc_file
    if any ([os.getenv('SSH_TTY'), os.getenv('SSH_CONNECTION'), os.getenv('SSH_CLIENT')]):
        cmd_prefix = '/bin/bash --rcfile ' + tmp_bash_rc_file
    os.system(cmd_prefix)
